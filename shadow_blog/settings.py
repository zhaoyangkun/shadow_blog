"""
Django settings for shadow_blog project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'hk=hu3f1cdc)v($!5&v^qadk%wi5sjgujl3)f=w&x5vq=d+mnq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',  # sitemap(站点地图)
    'corsheaders',  # 跨域
    'rest_framework',  # 配置rest_framework
    'compressor',  # compress
    # 添加的APP
    'front',  # 后台
    'admin',  # 前端
    'vditor',  # vditor(markdown编辑器)
    'oauth',  # 第三方授权登录
    'djcelery',  # celery
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # 跨域
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'admin.middleware.BlockMiddleware',  # 节流(限制访问频率)
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'admin.middleware.SimpleMiddleware',  # 登陆拦截器
]

ROOT_URLCONF = 'shadow_blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 额外添加
                'django.template.context_processors.static',  # 加入{{ STATIC_URL }}
                'django.template.context_processors.media',  # 解决template 里面{{ MEDIA_URL }}无法使用，配置后，会自动往前端添加MEDIA_URL标签.
                'front.context_processors.base__info',  # 加入全局context
            ],
        },
    },
]

WSGI_APPLICATION = 'shadow_blog.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

# USE_I18N = True
#
# USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')  # 加入项目根目录下的static文件
]

STATIC_ROOT = os.path.join(BASE_DIR, 'collect_static')  # 指定样式收集目录

# media_config
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# github授权登录
GITHUB_CLIENT_ID = '******'
GITHUB_CLIENT_SECRET = '******'
GITHUB_CALLBACK_URL = 'https://******'  # 填写你的回调地址

# 邮件配置
EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.163.com'  # 如果是 163 改成 smtp.163.com，QQ 邮箱改为为 smtp.qq.com
EMAIL_PORT = 465
EMAIL_HOST_USER = '******@163.com'  # 帐号
EMAIL_HOST_PASSWORD = '******'  # 授权码
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
